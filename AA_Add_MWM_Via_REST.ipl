/* 
 This policy is an example on how to automate creation of maintenance windows through the use of Impact's policy API. This code includes some of the MWM_AddAllFromFile policy code. 
 09/18/24 Jason Cress (jcress@us.ibm.com)

To use this policy, you need to create the following input parameters in the policy settings, and they should all be of type string:

windowType (otw=one time window, dow=day of week, dom=day of month, nth=nth day of month
userName
timeZone
startTime (in the form: HH:MM:SS, with the exception of one time window which should be "YYYY-MM-DD HH:mm:ss")
endTime (as above)
filter (a valid OMNIbus alerts.status filter, with double-quotes escaped via backslash as illustrated in the examples below)
dayOfWeek (Mon,Tue,Wed,Thu,Fri,Sat,Sun, multiples separated by |)
dayOfMonth (integer value represented as a string, with multiple days separated by |)
nthDay (first-fifthDAY... e.g. firstSun, thirdSat, etc with multiples separated by |)
description (freeform text)
  
 example curl to execute this policy through the Impact policy API:
 
curl -k -u impactadmin:impactpassword -d @t-win.json https://<impactserver>:9081/restui/policyui/policy/AA_Add_MWM_Window/runwithinputparameters -H "Content-Type: application/json;charset=utf-8" 

 where t-win.json file contains:

{
  "windowType": "otw",
  "userName": "impactadmin",
  "timeZone": "CST",
  "startTime": "1940-10-09 10:59:11",
  "endTime": "1940-10-09 11:59:11",
  "filter": "Node = \"dcmpr01\"",
  "description": "Adding a one time window for Node dcmpr01" 
}

... to add a one time window. 

 The date/time/timezone are expected in accepted format and not validated. 
 Therefore a MWM will be created with any format. See other examples below for day of week, day of month, and nth days:

DAY OF WEEK: 
{
    "windowType": "dow",
    "userName": "impactadmin",
    "timeZone": "CST",
    "dayOfWeek": "Wed",
    "startTime": "10:59:11",
    "endTime": "11:59:11",
    "filter": "Node = \"dcmpr01\"",
    "description": "Adding a day of week window for Node dcmpr01" 
}

DAY OF MONTH:
{
    "windowType": "dom",
    "userName": "impactadmin",
    "timeZone": "CST",
    "startTime": "22:00:00",
    "endTime": "23:59:59",
    "dayOfMonth": "7|18|19",
    "filter": "Node = \"dcmpr01\"",
    "description": "Day of month window for the days 7th, 18th, and 19th for node dcmpr01" 
}

NTH DAY:
{
    "windowType": "nth",
    "userName": "impactadmin",
    "timeZone": "CST",
    "startTime": "10:59:11",
    "endTime": "11:59:11",
    "filter": "Node = \"rodcs101\"",
    "nthDay": "fourthSun|fourthSat|fifthSun|fifthSat",
    "description": "Adding an nth day window for node rodcs101"
}

*/ 

// Function to validate input parameters  
 
function validateMWMs(valid, mwmAddWindowResult){     
  If (NULL == windowType OR (windowType != OTW AND windowType != DOM AND windowType != DOW AND windowType != NTH)){   
    valid = false;        
    mwmAddWindowResult = "Missing required windowType parameter";
    log(mwmAddWindowResult);       
  }  
  If (valid == true AND windowType == OTW AND (windowType == NULL or userName == NULL or timeZone == NULL or startTime == NULL or endTime == NULL or filter == NULL ) ){        
    mwmAddWindowResult = "Insufficient parameters for One_Time_Window. Requires windowType, userName, timeZone, startTime, endTime, and filter";
    log(mwmAddWindowResult);
    valid = false;      
  } 
  If (valid == true AND windowType == DOW AND dayOfWeek == NULL){        
    valid = false;                      
    mwmAddWindowResult = "Insufficient parameters for Day of Week window type: need day(s) of week (dayOfWeek).";
    log(mwmAddWindowResult); 
  } 
  If (valid == true AND windowType == DOM AND dayOfMonth == NULL){        
    valid = false;                      
    mwmAddWindowResult = "Insufficient parameters for Day of Month window type: need day(s) of month (dayOfMonth).";   
    log(mwmAddWindowResult);   
  } 
  If (valid == true AND windowType == NTH AND nthDay == NULL){        
    valid = false;                      
    mwmAddWindowResult = "Insufficient parameters for Day of Month window type: need nth day(s) of month (nthDay)."; 
    log(mwmAddWindowResult);     
  }  
}
  


OTW="otw";
DOW="dow";
DOM="dom";
NTH="nth";
 
// Initialize a JSON structure, to serialize into 'full_json_input' parameter
overall_JSON=NewJavaObject("com.ibm.json.java.JSONObject",null);
full_json_input=""; 

mwmAddWindowResult = "Success";

valid = true;


      Log(3, "Processing mwm from input parameters ");      
      validateMWMs(valid, mwmAddWindowResult);

      // If validation successful proceed with creating the MWM
      If (valid == true ) {
        maintWinType =Trim(windowType);
        userName =    Trim(userName);
        timeZone =    Trim(timeZone);
        startTime =   Trim(startTime);
        endTime =     Trim(endTime);
        filter =      Trim(filter);
        description = Trim(description); 
        JavaCall(null, overall_JSON, "put", {"maintWinType",maintWinType});
        JavaCall(null, overall_JSON, "put", {"userName",    userName});
        JavaCall(null, overall_JSON, "put", {"timeZone",    timeZone});
        JavaCall(null, overall_JSON, "put", {"startTime",   startTime});
        JavaCall(null, overall_JSON, "put", {"endTime",     endTime});
        JavaCall(null, overall_JSON, "put", {"filter",      filter});
        JavaCall(null, overall_JSON, "put", {"mwm_desc",    description});
        If (maintWinType == OTW) {
          //otw,impactadmin,EST,1940-10-09 10:59:11,1980-12-08 22:50:55,Node="John"
        } elseif (maintWinType == DOW) {
          //dow,impactadmin,MIT,10:59:11,22:44:55,Node="Paul",Wed|Thu|Fri|Sat         
          dowval2 = Trim(dayOfWeek);         
        } elseif (maintWinType == DOM) {
          //dom,impactadmin,MIT,10:59:11,22:44:55,Node="George",7|18|19         
          domval2 = Trim(dayOfMonth);                
        } elseif (maintWinType == NTH) {
          //nth,impactadmin,MIT,10:59:11,22:44:55,Node="Ringo",fourthSun|fourthSat|fifthSun|fifthSat               
          nthdayval2 = Trim(nthDay);        
        } 
   
        full_json_input = JavaCall(null, overall_JSON, "serialize", null);
        Log(3, "Creating MWM: " + full_json_input); 
        if (maintWinType == OTW) { 
           Activate(null, "MWM_Add1TWin");
        } else {
           Activate(null, "MWM_AddRWin");
        }
      } // End create MWM
       



Log("Finished processing mwm");
Log("*******************");
if(valid == true)
{
Log("Successfully added");
mwmAddWindowResult = "Success"; 
}
else
{
   Log("Failed to add window");
}
Log("-------------------");

